plugins {
    id 'org.springframework.boot' version '2.5.6'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
}

subprojects {

    apply plugin: 'java-library'
    apply plugin: 'eclipse'
    apply plugin: 'idea'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'
    apply plugin: "jacoco"

    sourceCompatibility = '11'

    configurations {
        compileOnly {
            extendsFrom annotationProcessor
        }
    }

    repositories {
        mavenCentral()
        google()
    }

    ext {
        set('springCloudVersion', "2021.0.0-RC1")
    }

    dependencies {
        implementation 'org.springframework.boot:spring-boot-starter-actuator:2.5.6'
        implementation 'org.springframework.boot:spring-boot-starter-thymeleaf:2.5.6'
        implementation 'org.springframework.boot:spring-boot-starter-web:2.5.6'
        implementation 'org.springframework.cloud:spring-cloud-starter-openfeign:3.0.5'
        compileOnly 'org.projectlombok:lombok:1.18.22'
        annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor:2.5.6'
        annotationProcessor 'org.projectlombok:lombok:1.18.22'


        //SWAGGER2
        implementation 'io.springfox:springfox-swagger2:2.9.2' //doesn't work with the latest version
        implementation 'io.springfox:springfox-swagger-ui:2.9.2' //doesn't work with the latest version

        //FEIGN
        implementation 'org.springframework.cloud:spring-cloud-starter-openfeign:3.0.4'

        testImplementation group: 'org.springframework.boot', name: 'spring-boot-starter-test', version: '2.1.6.RELEASE'
        testImplementation 'junit:junit:4.13.2'

        //JUNIT 5
        testImplementation 'org.junit.jupiter:junit-jupiter-api:5.3.1'
        testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.3.1'

        implementation 'junit:junit:4.13.2'

        implementation 'org.hibernate:hibernate-validator:7.0.1.Final'

    }

    test {
        useJUnitPlatform()
        finalizedBy jacocoTestReport
    }

    jacoco {
        toolVersion = "0.8.4"
    }

    jacocoTestReport {
        reports {
            xml.enabled true
            csv.enabled false
            html.destination file("${buildDir}/jacocoHtml")
        }


    }

    test.finalizedBy jacocoTestReport
    check.dependsOn jacocoTestCoverageVerification

    jacocoTestCoverageVerification {
        violationRules {
            rule {
                limit {
                    counter = 'LINE'
                    value = 'COVEREDRATIO'
                    minimum = 0.5
                }
            }
        }
    }

    task prepareKotlinBuildScriptModel {

    }
}
